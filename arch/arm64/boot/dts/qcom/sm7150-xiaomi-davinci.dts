// SPDX-License-Identifier: BSD-3-Clause
/*
 * SM7150-AA Xiaomi Mi 9T / Redmi K20 specific device tree
 *
 * Copyright (c) 2023, Danila Tikhonov <danila@jiaxyga.com>
 * Copyright (c) 2023, Jens Reidel <adrian@travitia.xyz>
 */

/dts-v1/;

#include "sm7150-xiaomi-common.dtsi"

/delete-node/ &adsp_mem;
/delete-node/ &wlan_msa_mem;
/delete-node/ &npu_mem;
/delete-node/ &ipa_fw_mem;
/delete-node/ &ipa_gsi_mem;
/delete-node/ &gpu_mem;

/ {
	/*
	 * Xiaomi Mi 9T
	 * Xiaomi Redmi K20
	 */
	model = "Xiaomi Mi 9T";
	compatible = "xiaomi,davinci", "qcom,sm7150";

	qcom,board-id = <40 0>;

	chosen {
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;
		framebuffer@9c000000 {
			compatible = "simple-framebuffer";
			reg = <0x0 0x9c000000 0x0 (1080 * 2340 * 4)>;
			width = <1080>;
			height = <2340>;
			stride = <(1080 * 4)>;
			format = "a8r8g8b8";
			clocks = <&gcc GCC_DISP_HF_AXI_CLK>;
		};
	};

	reserved-memory {
		framebuffer_region@9c000000 {
			reg = <0x0 0x9c000000 0x0 (1080 * 2340 * 4)>;
			no-map;
		};

		adsp_mem: memory@95100000 {
			reg = <0x0 0x95100000 0x0 0x2600000>;
			no-map;
		};

		wlan_msa_mem: memory@97700000 {
			reg = <0x0 0x97700000 0x0 0x180000>;
			no-map;
		};

		npu_mem: memory@97880000 {
			reg = <0x0 0x97880000 0x0 0x80000>;
			no-map;
		};

		ipa_fw_mem: memory@97900000 {
			reg = <0x0 0x97900000 0x0 0x10000>;
			no-map;
		};

		ipa_gsi_mem: memory@97910000 {
			reg = <0x0 0x97910000 0x0 0x5000>;
			no-map;
		};

		gpu_mem: memory@97915000 {
			reg = <0x0 0x97915000 0x0 0x2000>;
			no-map;
		};

		/*
		 * The rmtfs memory region in downstream is 'dynamically allocated'
		 * but given the same address every time. Hard code it as this address is
		 * where the modem firmware expects it to be.
		 */
		rmtfs_mem: memory@f2e01000 {
			compatible = "qcom,rmtfs-mem";
			reg = <0 0xf2e01000 0 0x600000>;
			no-map;

			qcom,client-id = <1>;
			qcom,vmid = <QCOM_SCM_VMID_MSS_MSA>;
		};
	};
};

&dispcc {
	status = "okay";
};

&dsi0 {
	status = "okay";

	panel: panel@0 {
		compatible = "ss,ea-f10";
		reg = <0>;

		reset-gpios = <&tlmm 8 GPIO_ACTIVE_LOW>;

		port {
			panel_in: endpoint {
				remote-endpoint = <&dsi0_out>;
			};
		};
	};
};

&dsi0_out {
	data-lanes = <0 1 2 3>;
	remote-endpoint = <&panel_in>;
};

&dsi_phy {
	status = "okay";
};

&mdp {
	status = "okay";
};

&mdss {
	status = "okay";
};

&gmu {
	status = "okay";
};

&gpu {
	status = "okay";
};

&apps_rsc {
	regulators-0 {
		vreg_l16a_2p8: ldo16 {
			regulator-min-microvolt = <1800000>;
			regulator-max-microvolt = <1800000>;
		};
	};
};

&pm8150l_flash {
	led-2 {
		function = LED_FUNCTION_FLASH;
		color = <LED_COLOR_ID_YELLOW>;
		led-sources = <2>;
		led-max-microamp = <150000>;
		flash-max-microamp = <1000000>;
		flash-max-timeout-us = <1280000>;
	};
};

&pm8150l_lpg {
	status = "okay";

	led@1 {
		color = <LED_COLOR_ID_RED>;
	};

	led@2 {
		reg = <2>;
		color = <LED_COLOR_ID_GREEN>;
		function = LED_FUNCTION_STATUS;
	};

	led@2 {
		reg = <3>;
		color = <LED_COLOR_ID_BLUE>;
		function = LED_FUNCTION_STATUS;
	};
};

&i2c2 {
	clock-frequency = <100000>;
	status = "okay";

	/* nqx,nq-nci (nfc) @ 28 */
};

&i2c4 {
	clock-frequency = <100000>;
	status = "okay";

	/* nxp,tfa9874 (speaker amplifier) @ 34 */
};

&i2c7 {
	clock-frequency = <100000>;
	status = "okay";

	/* goodix,gt9889 (touchscreen) @ 5d */
};

&i2c9 {
	clock-frequency = <100000>;
	status = "okay";

	/* asahi-kasei,akm09970 (magnetometer) @ 0c */
	/* qcom,smb1390 (charger) @ 10 */
};

&ipa {
	memory-region = <&ipa_fw_mem>;
	firmware-name = "qcom/sm7150/davinci/ipa_fws.mbn";
	status = "okay";
};

&remoteproc_adsp {
	firmware-name = "qcom/sm7150/davinci/adsp.mbn";
	status = "okay";
};

&remoteproc_cdsp {
	firmware-name = "qcom/sm7150/davinci/cdsp.mbn";
	status = "okay";
};

&remoteproc_mpss {
	firmware-name = "qcom/sm7150/davinci/modem.mbn";
	status = "okay";
};

&tlmm {
	gpio-reserved-ranges = <0 4>, <59 4>;
};
